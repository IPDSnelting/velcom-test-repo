#!/usr/bin/env python3

import sys
import subprocess
from typing import Dict, Any, List
import json
import random


def noisy_value(value: float) -> List[float]:
    return [
        round(random.uniform(value*0.5, value*1.5), 3) for _ in range(0, random.randint(1, 10))
    ]

dimensions = {
    "backend": [
        ("build_time", 120, "seconds", "LESS_IS_BETTER"),
        ("sloc", 20_000, "lines", "NEUTRAL"),
        ("coverage", 40, "percent", "MORE_IS_BETTER")
    ],
    "frontend": [
        ("build_time", 230, "seconds", "LESS_IS_BETTER"),
        ("sloc", 13_000, "lines", "NEUTRAL")
    ]
}

if __name__ == '__main__':
    commit_number = int(subprocess.check_output(
        ["git", "-C", sys.argv[1], "show", "-s", "--format=%H", "HEAD"]
    ), 16)

    random.seed(commit_number)

    result: Dict[str, Any] = {}

    for benchmark, metrics in dimensions.items():
        benchmark_result: Dict[str, Any] = {}
        result[benchmark] = benchmark_result

        for metric, median, unit, interpretation in metrics:
            metric_result = {
                "results": noisy_value(median),
                "unit": unit,
                "resultInterpretation": interpretation,
            }
            benchmark_result[metric] = metric_result

    print(json.dumps(result))
